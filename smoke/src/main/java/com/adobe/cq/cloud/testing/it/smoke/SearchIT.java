/*
 * Copyright 2018 Adobe Systems Incorporated
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.adobe.cq.cloud.testing.it.smoke;

import com.adobe.cq.testing.client.CQClient;
import com.adobe.cq.testing.junit.rules.CQAuthorClassRule;
import com.adobe.cq.testing.junit.rules.CQRule;
import com.adobe.cq.testing.junit.rules.Page;
import org.apache.sling.testing.clients.util.poller.Polling;
import org.junit.*;


import java.util.concurrent.TimeoutException;

import static java.util.concurrent.TimeUnit.SECONDS;

@Ignore("https://github.com/adobe/aem-test-samples/issues/95")
public class SearchIT {

    private static final long TIMEOUT = SECONDS.toMillis(30);

    @ClassRule
    public static final CQAuthorClassRule cqBaseClassRule = new CQAuthorClassRule();

    @Rule
    public CQRule cqBaseRule = new CQRule(cqBaseClassRule.authorRule);

    @Rule
    public Page root = new Page(cqBaseClassRule.authorRule);

    static CQClient adminAuthor;

    @BeforeClass
    public static void beforeClass() {
        adminAuthor = cqBaseClassRule.authorRule.getAdminClient(CQClient.class);

    }

    /**
     * Verifies that searching for the text inside the page created by the Page rule
     * returns the page containing it
     *
     * @throws InterruptedException if an error occurred
     * @throws TimeoutException if an error occurred
     */
    @Test
    public void searchInPages() throws InterruptedException, TimeoutException {

        new Polling() {
            @Override
            public Boolean call() throws Exception {
                return adminAuthor.searchInPages(root.getPath(), "This page was generated by an automated integration test", false, false)
                        .toString().contains(root.getPath());
            }
        }.poll(TIMEOUT, 500);
    }

}
